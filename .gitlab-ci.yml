stages:
  - sync
  - create
  - release

variables:
  SYNC_ONLY: "true"
  GIT_UPSTREAM_REPO_NAME: source-hut
  GIT_UPSTREAM_REPO_URL: https://git.sr.ht/~nicoco/slidge-whatsapp
  GIT_UPSTREAM_REPO_BRANCH: master
  GIT_SYNC_USER: git-sync
  GIT_SYNC_EMAIL: info@rimkus.it
  CI_REGISTRY_IMAGE: ravermeister/slidge-whatsapp
  DOCKER_AUTH_CONFIG: '
    {
      "credsStore": "pass"
    }
  '

.imgjob:
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  variables:
    DOCKER_DRIVER: overlay2
    BUILDX_VERSION: v0.12.0
    BUILDX_ARCHITECTURE: linux-arm64
    DOCKER_CREDENTIAL_HELPER_VERSION: v0.8.0
    DOCKER_CREDENTIAL_HELPER_ARCHITECTURE: linux-arm64
    GPG_USER: slidge-ci
    GPG_MAIL: info@rimkus.it
  tags:
    - docker
    - arm64
  before_script:
    - apk add --no-cache make git bash curl libsecret pass gpg-agent
    - .gitlab/docker-credential-init.sh "${GPG_USER}" "${GPG_MAIL}"
    - mkdir -p ~/.docker/cli-plugins
    - curl -sSLo ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.$BUILDX_ARCHITECTURE
    - chmod +x ~/.docker/cli-plugins/docker-buildx
    - mkdir -p /usr/local/bin
    - curl -sSLo /usr/local/bin/docker-credential-pass https://github.com/docker/docker-credential-helpers/releases/download/$DOCKER_CREDENTIAL_HELPER_VERSION/docker-credential-pass-$DOCKER_CREDENTIAL_HELPER_VERSION.$DOCKER_CREDENTIAL_HELPER_ARCHITECTURE
    - chmod +x /usr/local/bin/docker-credential-pass
    - docker context create tls-environment >/dev/null
    - docker buildx create --use tls-environment >/dev/null
    - echo "${DOCKER_AUTH_CONFIG}" > ~/.docker/config.json
    - echo "${CI_REGISTRY_PASSWORD}" | awk '{print $0}' | docker login --username "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"

### sync upstream repo (not finished yet)
sync_upstream:
  stage: sync
  image: alpine
  tags:
    - docker
    - arm64
  before_script:
    - apk add git
    - git config --global user.name "${GIT_SYNC_USER}"
    - git config --global user.email "${GIT_SYNC_EMAIL}"
  script:
    - git remote remove "${GIT_UPSTREAM_REPO_NAME}"
    - git remote add "${GIT_UPSTREAM_REPO_NAME}" "${GIT_UPSTREAM_REPO_URL}"
    - git fetch "${GIT_UPSTREAM_REPO_NAME}" "${GIT_UPSTREAM_REPO_BRANCH}"
    - git merge "${GIT_UPSTREAM_REPO_NAME}/${GIT_UPSTREAM_REPO_BRANCH}"
    - git add .
    - export CHANGED_FILES=$(git status -s | wc -l)
    - >
      if [ "${CHANGED_FILES}" -gt 0 ]; then
        git commit -m "sync from upstream repo ${GIT_UPSTREAM_REPO_URL}"
        git push origin
      else
        echo -e "we are already in sync with ${GIT_UPSTREAM_REPO_URL}"
      fi
  rules:
    - when: manual
    - if: $SYNC_ONLY == 'true'
      when: always

### create arm32/arm64
image_arm64:
  extends: .imgjob
  stage: create
  dependencies: []
  needs: []
  script:
    - >
      docker buildx build --no-cache --force-rm --compress --load \
        --platform "linux/arm64" \
        --target "slidge-whatsapp" \
        -t "${CI_REGISTRY_IMAGE}:arm64" \
        .

#image_arm32:
#  extends: .imgjob
#  stage: create
#  dependencies: []
#  needs: []
#  script:
#    - >
#      docker buildx build --no-cache --force-rm --compress --load \
#        --platform "linux/arm32" \
#        --target "slidge-whatsapp" \
#        -t "${CI_REGISTRY_IMAGE}:arm32" \
#        .

### upload to dockerhub

manifest:
  extends: .imgjob
  stage: release
  dependencies: [ ]
  needs:
#    - image_arm32
    - image_arm64
  before_script:
    - echo "${CI_REGISTRY_PASSWORD}" | awk '{print $0}' | docker login --username "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  script:
    - docker buildx imagetools create --tag "${CI_REGISTRY_IMAGE}:latest" "${CI_REGISTRY_IMAGE}:arm64"
